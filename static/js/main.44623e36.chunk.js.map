{"version":3,"sources":["images/mesto-logo.svg","images/Auth-ok.svg","images/Auth-err.svg","components/Header.js","components/Card.js","contexts/CurrentUserContext.js","components/Main.js","components/Register.js","utils/utils.js","components/Login.js","components/ProtectedRoute.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/EditVerificationPopup.js","components/ImagePopup.js","components/InfoTooltip.js","components/Footer.js","utils/Api.js","components/App.js","components/Auth.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","changeName","isToggle","changePath","handleHiddenLink","loggedIn","className","src","logo","alt","to","onClick","changeAuth","user","close","localStorage","removeItem","Card","React","useState","error","setError","isOwn","card","owner","_id","currentUser","cardDeleteButtonClassName","isLiked","likes","some","item","cardLikeButtonClassName","cardLikeButtonHidden","errorImageName","name","errorCountLike","link","e","onCardClick","onError","target","setAttribute","type","onCardLike","length","onTrashClick","parentElement","CurrentUserContext","createContext","Main","useContext","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","key","Register","email","setEmail","password","setPassword","onSubmit","preventDefault","onSignUp","id","placeholder","onChange","value","isError","baseUrlAuth","formConfig","Login","onSignIn","ProtectedRoute","Component","component","PopupWithForm","isOpen","overlayClick","method","action","noValidate","title","children","isButtonDisable","undefined","disabled","buttonText","aria-label","onClose","EditProfilePopup","setName","description","setDescription","formErrors","author","job","authorValid","jobValid","formValid","valid","setValid","validateField","input","inputName","inputValidationErrors","validity","validationMessage","useEffect","handleButtonText","isText","overlay","onChangeText","onUpdateUser","defaultValue","minLength","maxLength","pattern","required","EditAvatarPopup","inputRef","useRef","formError","form","isValid","setIsValid","onUpdateAvatar","current","ref","AddPlacePopup","inputLink","nameValid","linkValid","handleInput","EditVerificationPopup","onCardDelete","cardId","ImagePopup","InfoTooltip","handleText","isEnter","handleImage","authErr","authOk","Footer","api","baseUrl","this","_baseUrl","url","params","headers","authorization","fetch","then","res","ok","json","Promise","reject","status","_fetch","data","body","JSON","stringify","isState","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","state","elem","isEditVerificationPopupOpen","setIsEditVerificationPopupOpen","selectedCard","setSelectedCard","showImage","setShowImage","text","setText","setIsEnter","setLoggedIn","userData","setUserData","history","useHistory","auth","setAuth","errorReg","setErrorReg","setCurrentUser","setCards","toggleAuth","changeText","closeAllPopups","classList","contains","getUserInterface","catch","err","console","log","getInitialCards","array","window","addEventListener","getItem","jwt","token","push","tokenCheck","Provider","exact","path","changeLikeCardStatus","newCard","newCards","c","Auth","setItem","sendUserInfo","newData","finally","sendPlaceCard","reset","changeAvatar","deleteCard","remove","filter","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.44623e36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mesto-logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/Auth-ok.e38b395c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Auth-err.4072126c.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n\r\n  // const [isEnter, setIsEnter] = React.useState(true); // превоначально попадаем на стр входа\r\n  // const [name, setName] = React.useState('Регистрация');\r\n  // const [link, setLink] = React.useState('/signup');\r\n\r\n  const changeName = (\r\n    `${props.isToggle ? 'Регистрация' : 'Войти'}`\r\n  )\r\n\r\n  const changePath = (\r\n    `${props.isToggle ? '/signup' : '/signin'}`\r\n  )\r\n\r\n  function changeLink() { // меняет текст и ссылке в зависимости от стейта (усли тру (сначала да) - перенаправит на регистрцию, и наоборот)\r\n    // props.isToggle ? setLink({ name: 'Регистрация', path: '/signup' }) : setLink({ name: 'Войти', path: '/signin' })\r\n    props.changeAuth(); // меняет стейт на противоложный\r\n  }\r\n\r\n  // function changeLink() { // меняет текст и ссылке в зависимости от стейта (усли тру (сначала да) - перенаправит на регистрцию, и наоборот)\r\n  //   isEnter ? setLink({ name: 'Регистрация', path: '/signup' }) : setLink({ name: 'Войти', path: '/signin' });\r\n  //   setIsEnter(!isEnter); // меняет стейт на противоложный\r\n  // }\r\n\r\n  const handleHiddenLink = (\r\n    `${!props.loggedIn && 'header__link_hidden'}`\r\n  )\r\n\r\n  function signOut() {\r\n    props.close();\r\n    localStorage.removeItem('jwt');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <img className=\"header__logo\" src={props.logo} alt=\"Логотип-Место\" />\r\n        <ul className=\"header__info\">\r\n          <li\r\n            className=\"header__list\">\r\n            <Link\r\n              className=\"header__link\"\r\n              to={props.loggedIn ? '/' : changePath}\r\n              onClick={changeLink}\r\n            >\r\n              {props.loggedIn ? props.user : changeName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"header__list\"><Link className={`header__link header__link_gray ${handleHiddenLink}`} to=\"/signin\" onClick={signOut}>Выйти</Link></li>\r\n        </ul>\r\n      </header>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\n\nfunction Card(props) {\n\n  const [error, setError] = React.useState(false); //стейт для проверки правильности ссылки\n\n  function errorLoadImage(e) {\n    e.target.setAttribute('src', 'https://image.freepik.com/free-vector/404_115790-50.jpg'); //eсди ссылка неверна, загрузит стандартную картинку\n    setError(true); //поменяет стейт\n  }\n\n  function handleDeleteClick(e) {\n    props.onTrashClick(props.card, e.target.parentElement);\n  }\n\n  function handleClick(e) {\n    !error && props.onCardClick(props.card); //если нет ошибки в картинке, то можно по ней кликать\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  const isOwn = props.card.owner._id === props.currentUser._id; // Определяем, являемся ли мы владельцем текущей карточки\n  const cardDeleteButtonClassName = ( // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    `element__trash ${isOwn ? '' : 'element__trash_hidden'}`\n  );\n\n\n  const isLiked = props.card.likes.some(item => item._id === props.currentUser._id); // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const cardLikeButtonClassName = (// Создаём переменную, которую после зададим в `className` для кнопки лайка\n    `element__button ${isLiked ? 'element__button_like-active' : ''}`\n  );\n\n  const cardLikeButtonHidden = ( //если есть ошибка то скрываем кнопку сердечко\n    `${error && 'element__button_hidden'}`\n  );\n\n  const errorImageName = ( //если нет ошибки, то показываем текст, иначе пишем свой\n    `${!error ? `${props.card.name}` : 'Упс, ошибка...'}`\n  );\n\n  const errorCountLike = ( //если есть ошибка, то скрываем кол-во лайков\n    `element__count ${error && 'element__count_hidden'}`\n  );\n\n  return (\n    <>\n      <div className=\"element\">\n        <img className=\"element__image\" alt=\"Изображение\" src={props.card.link} onClick={handleClick} onError={errorLoadImage} /> {/*при клике вызывает ф-цию по смене стейта и передает данные о карточке в App*/}\n        <div className=\"element__places\">\n          <h2 className=\"element__place\">{errorImageName}</h2>\n          <div className=\"element__likes\">\n            <button className={`${cardLikeButtonClassName} ${cardLikeButtonHidden}`} type=\"button\" onClick={handleLikeClick}></button>\n            <span className={errorCountLike}> {props.card.likes.length > 0 ? `${props.card.likes.length}` : 0} </span>\n          </div>\n        </div>\n        <button className={cardDeleteButtonClassName} type=\"button\" onClick={handleDeleteClick}></button>\n      </div>\n    </>\n  )\n}\n\nexport default Card;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext(); //новый объект контекста\n","import React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n\n  const currentUser = React.useContext(CurrentUserContext); //получаем объект о пользвателе из контекста\n\n  return (\n    <>\n      <main className=\"content\">\n        <section className=\"profile\">\n          <div className=\"profile__cover\">\n            <div className=\"profile__information\">\n              <figure className=\"profile__background\" onClick={props.onEditAvatar}></figure> {/*при клике на аву меняем стейт на true и передем в компонент App*/}\n              <img className=\"profile__avatar\" src={currentUser.avatar} alt={currentUser.name} />\n            </div>\n            <div className=\"profile__info\">\n              <div className=\"profile__reg\">\n                <h1 className=\"profile__author\">{currentUser.name}</h1>\n                <button className=\"profile__button-edit\" type=\"button\" onClick={props.onEditProfile}></button> {/*при клике на редактор инфы меняем стейт на true и передем в компонент App*/}\n              </div>\n              <p className=\"profile__specialty\">{currentUser.about}</p>\n            </div>\n          </div>\n          <button className=\"profile__button-add\" type=\"button\" onClick={props.onAddPlace}></button> {/*при клике на + меняем стейт на true и передем в компонент App*/}\n        </section>\n\n        <section className=\"elements\"> {/*передаем в Card информацию о каждой карточке, приcваиваем каждой карточке key и передаем ф-цию по смене флага при нажатии на картинку*/}\n          {props.cards.map((item) => {\n            return (\n              <Card card={item}\n                key={item._id}\n                onCardClick={props.onCardClick}\n                currentUser={currentUser}\n                onCardLike={props.onCardLike}\n                onTrashClick={props.onTrashClick} />\n            );\n          })}\n        </section>\n      </main>\n    </>\n  )\n}\n\nexport default Main\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction Register(props) {\n\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  function changeToggle() {\n    props.changeAuth();\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onSignUp(email, password);\n  }\n\n  return (\n      <section className=\"register\">\n        <form className=\"register__form\" onSubmit={handleSubmit}>\n          <h2 className=\"register__text\">Регистрация</h2>\n          <fieldset className=\"register__auth\">\n            <input\n              className=\"register__input\"\n              id=\"login\"\n              placeholder=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              onChange={(e) => setEmail(e.target.value)}>\n            </input>\n            <span className=\"register__input-error\" id=\"login-input-error\">123</span>\n            <input\n              className=\"register__input\"\n              id=\"password\"\n              placeholder=\"Пароль\"\n              type=\"password\"\n              name=\"password\"\n              onChange={(e) => setPassword(e.target.value)}>\n            </input>\n            <span className=\"register__input-error\" id=\"password-input-error\">123</span>\n          </fieldset>\n          <button className=\"register__btn-submit\" type=\"submit\">Зарегистрироваться</button>\n          <p className=\"register__have-auth\">Уже зарегистрированы? <Link className=\"register__enter\" to={!props.isError && \"/signin\"} onClick={changeToggle}>Войти</Link></p>\n        </form>\n      </section>\n  )\n}\n\nexport default Register;\n","export const baseUrl = 'https://api.cucmber.students.nomoreparties.co'; //базовый URL\nexport const baseUrlAuth = 'https://api.cucmber.students.nomoreparties.co';\n\nexport const formConfig = {\n  inputSelector: '.popup-container__infoform', //поле формы\n  submitButtonSelector: '.popup-container__button-add', //кнопка добавить/сохранить/создать\n  inactiveButtonClass: 'popup-container__button-add_error', //стиль неактивной кнопки\n  inputErrorClass: 'popup-container__infoform_type_error', //стиль красного подчеркивания поля\n  errorClass: 'popup-container__input-error_active' //появление ошибки валидации\n};\n\n// export const baseUrl = 'https://mesto.nomoreparties.co/v1/cohort-12'; //базовый URL\n// export const baseUrlAuth = 'https://auth.nomoreparties.co';\n","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport * as Auth from './Auth';\r\n\r\nfunction Login(props) {\r\n\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  // const history = useHistory();\r\n\r\n  function changeToggle() {\r\n    props.changeAuth();\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onSignIn(email, password);\r\n    // Auth.login(email, password)\r\n    //   .then((data) => {\r\n    //     if (data.token) {\r\n    //       setEmail('');\r\n    //       setPassword('');\r\n    //       props.onLogin();\r\n    //       props.isAuth('');\r\n    //       history.push('/');\r\n    //     }\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(`Упс, произошла ошибка: ${err}`);\r\n    //     props.isAuth(err.message);\r\n    //   })\r\n  }\r\n\r\n  return (\r\n      <section className=\"register\">\r\n        <form className=\"register__form\" onSubmit={handleSubmit}>\r\n          <h2 className=\"register__text\">Вход</h2>\r\n          <fieldset className=\"register__auth\">\r\n            <input className=\"register__input\" id=\"login\" placeholder=\"Email\" type=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\r\n            <span className=\"register__input-error\" id=\"login-input-error\">123</span>\r\n            <input className=\"register__input\" id=\"password\" placeholder=\"Пароль\" type=\"password\" onChange={(e) => setPassword(e.target.value)}></input>\r\n            <span className=\"register__input-error\" id=\"password-input-error\">123</span>\r\n          </fieldset>\r\n          <button className=\"register__btn-submit\" type=\"submit\">Войти</button>\r\n          <p className=\"register__have-auth\">Ещё не зарегистрированы? <Link className=\"register__enter\" to=\"/signup\" onClick={changeToggle}>Регистрация</Link></p>\r\n        </form>\r\n      </section>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\n// этот компонент принимает другой компонент в качестве пропса\n// он также может взять неограниченное число пропсов и передать их новому компоненту\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\n  return (\n    <Route>\n      {\n        () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"./signin\" />\n      }\n    </Route>\n)}\n\nexport default ProtectedRoute;\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n\n  return (\n    <>\n      <section className={`popup popup__${props.name} ${props.isOpen && 'popup_opened'}`} onClick={props.overlayClick}>\n        <form className={`popup-container popup-container__${props.name}`} name=\"form\" method=\"POST\" action=\"#\" onSubmit={props.onSubmit} noValidate>\n          <h2 className=\"popup-container__text\">{props.title}</h2>\n          <fieldset className=\"popup-container__info\">\n            {props.children}\n            <button\n              className={`popup-container__button-add ${!props.isButtonDisable && props.isButtonDisable !== undefined ? 'popup-container__button-add_error' : ''}`}\n              type=\"submit\"\n              disabled={!props.isButtonDisable && props.isButtonDisable !== undefined}>\n              {props.buttonText}\n            </button>\n          </fieldset>\n          <button className=\"popup-container__button-reset\" type=\"reset\" aria-label=\"Close\" onClick={props.onClose}></button>\n        </form>\n      </section>\n    </>\n  )\n}\n\nexport default PopupWithForm;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { formConfig } from '../utils/utils';\n\nfunction EditProfilePopup(props) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  //реализация управляемого компонента\n  const [name, setName] = React.useState(''); //стетй с именем\n  const [description, setDescription] = React.useState(''); //стейт с деятельностью\n  const [valid, setValid] = React.useState({ //стейт для валидации\n    formErrors: { author: '', job: '' }, //объект с текстом ошибок\n    authorValid: true, //валидность поля с автором\n    jobValid: true, //валидность с полем деятельности\n    formValid: true, //валидность всей формы\n  });\n\n  React.useEffect(() => { //меняем стейты в зависимости от контекста currentUser\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleChangeAuthor(e) { //меняем стейт при каждом изменении в поле инпута\n    setName(e.target.value);\n    validateField(e.target, e.target.name); //вызывем функцию по валидности (передаем инпут и его имя)\n  }\n\n  function handleChangeAbout(e) {\n    setDescription(e.target.value);\n    validateField(e.target, e.target.name);\n  }\n\n  function validateField(input, inputName) {\n    let inputValidationErrors = valid.formErrors; //все переменные берут первоначальные значения из стейта\n    let authorValid = valid.authorValid;\n    let jobValid = valid.jobValid;\n    let formValid = valid.formValid;\n\n    switch (inputName) {\n      case 'author':\n        authorValid = input.validity.valid;\n        inputValidationErrors.author = authorValid ? '' : input.validationMessage;\n        break;\n      case 'job':\n        jobValid = input.validity.valid;\n        inputValidationErrors.job = jobValid ? '' : input.validationMessage;\n        break;\n      default:\n        break;\n    }\n\n    formValid = authorValid && jobValid;\n\n    setValid({\n      formErrors: inputValidationErrors,\n      authorValid: authorValid,\n      jobValid: jobValid,\n      formValid: formValid,\n    })\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onChangeText();\n    props.onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n\n  function resetAll() {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n    setValid({\n      formErrors: { author: '', job: '' },\n      authorValid: true,\n      jobValid: true,\n      formValid: true,\n    })\n  }\n\n  function resetInput() { //сбрасываем введенные значания инпутов при клике на крестик\n    props.onClose();\n    resetAll()\n  }\n\n  const handleButtonText = (\n    `${props.isText ? 'Сохранение...' : 'Сохранить'}`\n  )\n\n  function overlayClick(e) {\n    props.overlay(e.target);\n  }\n\n  return (\n    <PopupWithForm\n      overlayClick={overlayClick}\n      onSubmit={handleSubmit}\n      title=\"Редактировать профиль\"\n      name=\"edit-form\"\n      buttonText={handleButtonText}\n      isButtonDisable={valid.formValid}\n      isOpen={props.isOpen}\n      onClose={resetInput}\n      children={\n        <>\n          <input className={`popup-container__infoform popup-container__infoform_author ${!valid.authorValid && formConfig.inputErrorClass}`}\n            id=\"author\"\n            name=\"author\"\n            type=\"text\"\n            placeholder=\"Автор\"\n            defaultValue={name}\n            minLength=\"2\" maxLength=\"40\"\n            pattern=\"[A-Za-zА-ЯЁа-яё -]{1,}\" required\n            onChange={handleChangeAuthor} />\n          <span className={`popup-container__input-error ${!valid.authorValid && formConfig.errorClass}`} id=\"author-input-error\">{valid.formErrors.author}</span>\n          <input className={`popup-container__infoform popup-container__infoform_author ${!valid.jobValid && formConfig.inputErrorClass}`}\n            id=\"job\"\n            name=\"job\"\n            type=\"text\"\n            defaultValue={description}\n            placeholder=\"О себе\"\n            minLength=\"2\" maxLength=\"200\" required\n            onChange={handleChangeAbout} />\n          <span className={`popup-container__input-error ${!valid.jobValid && formConfig.errorClass}`} id=\"job-input-error\">{valid.formErrors.job}</span>\n        </>\n      }\n    />\n  )\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { formConfig } from '../utils/utils';\n\nfunction EditAvatarPopup(props) {\n\n  const inputRef = React.useRef();\n\n  const [isValid, setIsValid] = React.useState({\n    formError: '',\n    avatar: false,\n    form: false\n  });\n\n  function handleInputError(e) {\n    validateField(e.target, e.target.name);\n  }\n\n  function validateField(input, name) {\n    let avatar = isValid.avatar;\n    let form = isValid.form;\n    let formError = isValid.formError;\n\n    avatar = input.validity.valid;\n    formError = avatar ? '' : input.validationMessage;\n    form = avatar;\n\n    setIsValid({\n      formError: formError,\n      avatar: avatar,\n      form: form\n    })\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onChangeText();\n    props.onUpdateAvatar(e.target, {\n      avatar: inputRef.current.value,\n    });\n  }\n\n  const handleButtonText = (\n    `${props.isText ? 'Сохранение...' : 'Сохранить'}`\n  );\n\n  function overlayClick(e) {\n    props.overlay(e.target);\n  }\n\n  function resetInput() { //сбрасываем введенные значания инпутов при клике на крестик\n    props.onClose();\n  }\n\n  return (\n    <PopupWithForm\n      isButtonDisable={isValid.form}\n      overlayClick={overlayClick}\n      onSubmit={handleSubmit}\n      title=\"Обновить аватар\"\n      defaultValue=\"\"\n      name=\"avatar\"\n      buttonText={handleButtonText}\n      isOpen={props.isOpen}\n      onClose={resetInput}\n      children={\n        <>\n          <input className={`popup-container__infoform popup-container__infoform_avatar-link ${!isValid.avatar && formConfig.inputErrorClass}`}\n            id=\"avatar-input\"\n            ref={inputRef}\n            onChange={handleInputError}\n            name=\"avatar\"\n            type=\"url\"\n            placeholder=\"Введите ссылку\"\n            required />\n          <span className=\"popup-container__input-error\">{isValid.formError}</span>\n        </>\n      }\n    />\n  )\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { formConfig } from '../utils/utils';\n\nfunction AddPlacePopup(props) {\n\n  const inputName = React.useRef(); //инпут с названием карточки\n  const inputLink = React.useRef(); //иипут с ссылкой\n  const [valid, setValid] = React.useState({ //стейт для валидации\n    formErrors: { name: '', link: '' }, //объект с текстом ошибок\n    nameValid: false, //валидность поля с автором\n    linkValid: false, //валидность с полем деятельности\n    formValid: false //валидность всей формы\n  });\n\n  function handleInput(e) {\n    if (e.target === inputName.current) {\n      validateField(inputName.current, inputName.current.name)\n    } else {\n      validateField(inputLink.current, inputLink.current.name)\n    }\n  }\n\n  function validateField(input, inputName) {\n    let inputValidationErrors = valid.formErrors; //все переменные берут первоначальные значения из стейта\n    let nameValid = valid.nameValid;\n    let linkValid = valid.linkValid;\n    let formValid = valid.formValid;\n\n    switch (inputName) {\n      case 'name':\n        nameValid = input.validity.valid;\n        inputValidationErrors.name = nameValid ? '' : input.validationMessage;\n        break;\n      case 'link':\n        linkValid = input.validity.valid;\n        inputValidationErrors.link = linkValid ? '' : input.validationMessage;\n        break;\n      default:\n        break;\n    }\n\n    formValid = nameValid && linkValid;\n\n    setValid({\n      formErrors: inputValidationErrors,\n      nameValid: nameValid,\n      linkValid: linkValid,\n      formValid: formValid,\n    })\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onChangeText(); //меняем стейт текста на true\n    props.onAddPlace(e.target, {\n      name: inputName.current.value, //передаем хначания инпутов\n      link: inputLink.current.value  //как объект в апи запрос\n    })\n    setValid({ //сбрасывам значения валидации (ума не приложу как ее сделать после апи, а не во врЕмя...)\n      formErrors: { name: '', link: '' },\n      nameValid: false,\n      linkValid: false,\n      formValid: false\n    })\n  }\n\n  const handleButtonText = (\n    `${props.isText ? 'Сохранение...' : 'Создать'}` //если стейт текста true ...\n  );\n\n  function resetInput() { //сбрасываем введенные значания инпутов при клике на крестик\n    props.onClose();\n    setValid({\n      formErrors: { name: '', link: '' },\n      nameValid: false,\n      linkValid: false,\n      formValid: false\n    })\n  }\n\n  function overlayClick(e) {\n    props.overlay(e.target);\n  }\n\n  return (\n    <PopupWithForm\n      isButtonDisable={valid.formValid}\n      overlayClick={overlayClick}\n      onSubmit={handleSubmit}\n      title=\"Новое место\"\n      name=\"add-place\"\n      buttonText={handleButtonText}\n      isOpen={props.isOpen}\n      onClose={resetInput}\n      children={\n        <>\n          <input\n            className={`popup-container__infoform popup-container__infoform_place-name ${!valid.nameValid && formConfig.inputErrorClass}`}\n            id=\"place-input\"\n            defaultValue=\"\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Название\"\n            minLength=\"1\" maxLength=\"30\"\n            ref={inputName} //получаем доступ к элементу\n            onChange={handleInput}\n            required\n          />\n          <span className={`popup-container__input-error ${!valid.nameValid && formConfig.errorClass}`} id=\"place-input-error\">{valid.formErrors.name}</span>\n          <input\n            className={`popup-container__infoform popup-container__infoform_place-link ${!valid.linkValid && formConfig.inputErrorClass}`}\n            id=\"link-input\"\n            defaultValue=\"\"\n            name=\"link\"\n            type=\"url\"\n            placeholder=\"Ссылка на картинку\"\n            ref={inputLink}\n            onChange={handleInput}\n            required\n          />\n          <span className={`popup-container__input-error ${!valid.linkValid && formConfig.errorClass}`}>{valid.formErrors.link}</span>\n        </>\n      }\n    />\n  )\n}\n\nexport default AddPlacePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditVerificationPopup(props) {\n\n  function handleDeleteClick(e) {\n    e.preventDefault();\n    props.onChangeText();\n    props.onCardDelete(props.cardId);\n  }\n\n  const handleButtonText = (\n    `${props.isText ? 'Сохранение...' : 'Да'}`\n  );\n\n  function overlayClick(e) {\n    props.overlay(e.target);\n  }\n\n  return (\n    <PopupWithForm\n      overlayClick={overlayClick}\n      onSubmit={handleDeleteClick}\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      title=\"Вы уверены?\"\n      name=\"verification\"\n      buttonText={handleButtonText}\n      isText={props.isText}\n    />\n  )\n}\n\nexport default EditVerificationPopup;\n","import React from 'react';\n\nfunction ImagePopup(props) {\n\n  function overlayClick(e) {\n    props.overlay(e.target);\n  }\n\n  return (\n    <>\n      <section className={`popup popup__show-image ${props.isOpen && 'popup_opened'}`} onClick={overlayClick}>\n        <figure className=\"popup-image\">\n          <img className=\"popup-image__picture\" src={props.card.link} alt=\"Изображение места\"/>\n          <figcaption className=\"popup-image__caption\">{props.card.name}</figcaption>\n          <button className=\"popup-container__button-reset popup-container__button-reset_image\" type=\"reset\" aria-label=\"Close\" onClick={props.onClose}></button>\n        </figure>\n      </section>\n    </>\n  )\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport authOk from '../images/Auth-ok.svg';\nimport authErr from '../images/Auth-err.svg';\n\nfunction InfoTooltip(props) {\n\n  const handleText = ( // если есть тект ошибки, меняет тект в окошке\n    `${props.isEnter ? 'Что-то пошло не так! Попробуйте ещё раз.' : 'Вы успешно зарегистрировались!'}`\n  )\n\n  const handleImage = ( // если есть тект ошибки, меняет картинку в окошке\n    `${props.isEnter ? authErr : authOk}`\n  )\n\n  return (\n      <section className={`popup ${props.isOpen && 'popup_opened'}`}>\n        <figure className=\"popup-auth\">\n          <img className=\"popup-auth__picture\" src={handleImage} alt=\"Изображение\"/>\n          <figcaption className=\"popup-auth__caption\">{handleText}</figcaption>\n          <button className=\"popup-container__button-reset popup-container__button-reset_image\" type=\"reset\" aria-label=\"Close\" onClick={props.onClose}></button>\n        </figure>\n      </section>\n  )\n}\n\nexport default InfoTooltip;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <>\n      <footer className=\"footer\">\n          <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n      </footer>\n    </>\n  )\n}\n\nexport default Footer\n","import { baseUrl } from './utils';\n//на данный момент бОльшая часть запросов не функционирует, \"работают\" только  GET-запросы\nclass Api {\n  constructor({ baseUrl }) {\n    this._baseUrl = baseUrl;\n  }\n  //приватный фетч запрос\n  _fetch(url, params) {\n    params.headers = {\n      authorization: 'f137b98e-3f11-4f62-a4b2-d83c32e82337',\n      'Content-Type': 'application/json'\n    };\n    return fetch(this._baseUrl + url, params)\n      .then((res) => {\n        if (!res.ok) {\n          return Promise.reject(res.status);\n        } else {\n          return res.json();\n        }\n      })\n  }\n  //получаем карточки с сервера\n  getInitialCards(url) {\n    return this._fetch(url, {\n      method: 'GET'\n    })\n  }\n  //получает имя и деятельность автора с сервера\n  getUserInterface(url) {\n    return this._fetch(url, {\n      method: 'GET'\n    })\n  }\n  //отправить инфооацию об аторе на сервер и обновить ее\n  sendUserInfo(url, data) {\n    return this._fetch(url, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        name: `${data.name}`,\n        about: `${data.about}`\n      })\n    })\n  }\n  //отправить карточку на сервер\n  sendPlaceCard(url, data) {\n    return this._fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        name: `${data.name}`,\n        link: `${data.link}`\n      })\n    })\n  }\n\n  changeLikeCardStatus(url, isState) {\n    if (!isState) {\n      return this._fetch(url, {\n        method: 'PUT'\n      })\n    } else {\n      return this._fetch(url, {\n        method: 'DELETE'\n      })\n    }\n  }\n\n  //удалить карточку с сервера\n  deleteCard(url) {\n    return this._fetch(url, {\n      method: 'DELETE'\n    })\n  }\n\n  //поменять аватар\n  changeAvatar(url, data) {\n    return this._fetch(url, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        avatar: `${data.avatar}`\n      })\n    })\n  }\n}\n\nexport const api = new Api({ baseUrl });\n","import React from 'react';\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport logo from '../images/mesto-logo.svg';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport EditVerificationPopup from './EditVerificationPopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport Footer from './Footer';\r\nimport { api } from '../utils/Api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport * as Auth from './Auth';\r\n\r\nfunction App() {\r\n\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false); //стейт профиль\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false); //добавление нового места\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false); //смена аватара\r\n  const [isEditVerificationPopupOpen, setIsEditVerificationPopupOpen] = React.useState({ state: false, cardId: '', elem: {} }); //подтверждение удаления\r\n  const [selectedCard, setSelectedCard] = React.useState(false); //открытие картинки\r\n  const [showImage, setShowImage] = React.useState({}); //данные картинки\r\n  const [text, setText] = React.useState(false); //стейт для изменения текта при загрузке сервера\r\n\r\n  const [isEnter, setIsEnter] = React.useState(false); // стейт для всплывающего окна с успешным (или нет) входом\r\n\r\n  const [loggedIn, setLoggedIn] = React.useState(false); // стейт чтоб войти при успешной авторизации\r\n  const [userData, setUserData] = React.useState(''); // стейт получения майл пользователя\r\n  const history = useHistory();\r\n\r\n  const [auth, setAuth] = React.useState(true); // стейт для перключения между регистрацией и входом\r\n  const [errorReg, setErrorReg] = React.useState(false); // стейт с наличием ошибки при регистрации и входе (изначально ее нет)\r\n  const [currentUser, setCurrentUser] = React.useState({}); //получаем информацию об авторе\r\n  const [cards, setCards] = React.useState([]);//создает стейт из пустого массива (в нем будет хранится массив карточек)\r\n\r\n  React.useEffect(() => {\r\n    api.getUserInterface('/users/me')\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Упс, произошла ошибка: ${err}`);\r\n      });\r\n    api.getInitialCards('/cards') //отправляем запрос на сервер и получаем массив карточек\r\n      .then((array) => {\r\n        setCards(array); //меняем стейт cards\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Упс, произошла ошибка: ${err}`);\r\n      });\r\n  }, []);\r\n\r\n  // смена стейта для перключения между регистрацией и входом\r\n  function toggleAuth() {\r\n    setAuth(!auth);\r\n  }\r\n\r\n  function changeText() { //смена текта при апи запросе\r\n    setText(true);\r\n  }\r\n\r\n  // при нажатии \"Выйти\" меняет стейт\r\n  function closeLogin() {\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  //функция меняет хначения при клике на картинку и передает showImage данные об этой картинке (получает из компонента ImagePopup)\r\n  function handleCardClick(data) {\r\n    setSelectedCard(true);\r\n    setShowImage(data);\r\n  }\r\n  //попап сменить аватарку\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  };\r\n  //попап редактировать профиль\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  };\r\n  //попап загрузить новое место\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  };\r\n  // подтверждение удаления (принимает объект карточки и форму)\r\n  function handleVerificationClick(data, e) {\r\n    setIsEditVerificationPopupOpen({ state: true, cardId: `${data._id}`, elem: e });\r\n  };\r\n  //закрывает все попапы на крестик\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setSelectedCard(false);\r\n    setIsEnter(false);\r\n    setIsEditVerificationPopupOpen({ state: false, cardId: '', elem: {} });\r\n  }\r\n\r\n  function overlayClick(e) { //оверлей по клику (принимает попап)\r\n    if (e.classList.contains('popup')) {\r\n      closeAllPopups();\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Escape') {\r\n        closeAllPopups();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(item => item._id === currentUser._id);\r\n\r\n    api.changeLikeCardStatus(`/cards/likes/${card._id}`, isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);// Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n        //проверяет если id предыдущей карточки равен id полученной при PUT-запросе, то создавай новую карточку из запроса иначе оставляй старую\r\n        setCards(newCards);// Обновляем стейт\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Упс, произошла ошибка: ${err}`);\r\n      });\r\n  }\r\n  // запрос по удалению карточки с сервера (принимает Id карточки)\r\n  function handleCardDelete(cardId) {\r\n    api.deleteCard(`/cards/${cardId}`)\r\n      .then((data) => {\r\n        isEditVerificationPopupOpen.elem.remove(); //удаляет карточку\r\n        const newCards = cards.filter((c) => c._id !== data._id);\r\n        setCards(newCards); //меняет стейт с карточками\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Упс, произошла ошибка: ${err}`);\r\n      })\r\n      .finally(() => {\r\n        setText(false); //меняет текст кнопки сабмита\r\n      })\r\n  }\r\n\r\n  // обновляет информацию о пользователе\r\n  function handleUpdateUser(data) {\r\n    api.sendUserInfo('/users/me', data)\r\n      .then((newData) => {\r\n        setCurrentUser(newData); //обновляет контекст currentUser\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Упс, произошла ошибка: ${err}`);\r\n      })\r\n      .finally(() => {\r\n        setText(false); //меняет текст кнопки сабмита\r\n      })\r\n  }\r\n  // обновляет аватар пользователя (принимает форму и объект с данными (имя и ссылка))\r\n  function handleUpdateAvatar(e, data) {\r\n    api.changeAvatar('/users/me/avatar', data)\r\n      .then((newData) => {\r\n        setCurrentUser(newData); //обновляет контекст currentUser\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Упс, произошла ошибка: ${err}`);\r\n      })\r\n      .finally(() => {\r\n        e.reset(); //сбрасывает значения инпутов\r\n        setText(false); //меняет текст кнопки сабмита\r\n      });\r\n  }\r\n  // добавляет новую карточку (принимает форму и объект(имя и ссылка))\r\n  function handleAddPlace(e, data) {\r\n    api.sendPlaceCard('/cards', data)\r\n      .then((newCard) => {\r\n        setCards([...cards, newCard]); //добавляет в имеющийся массив карточек новую карточку\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Упс, произошла ошибка: ${err}`);\r\n      })\r\n      .finally(() => {\r\n        e.reset(); //сбрасывает значения инпутов\r\n        setText(false); //меняет текст кнопки сабмита\r\n      });\r\n  }\r\n  // при монтировании при удачном запросе вызывает ф-цию по получению email\r\n  React.useEffect(() => {\r\n    tokenCheck();\r\n  }, [loggedIn]);\r\n\r\n  // проверяет токен в локальном хранилище, если он есть, делает запрос\r\n  function tokenCheck() {\r\n    if (localStorage.getItem('jwt')) {\r\n      const jwt = localStorage.getItem('jwt');\r\n      Auth.getContent(jwt)\r\n        .then((data) => {\r\n          if (data) {\r\n            setLoggedIn(true); // меняем стейт для входа к карточкам\r\n            history.push('/'); // перенаправляем на нужную стр\r\n            setUserData(`${data.data.email}`); // меняем на имя в хедере\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(`Упс, произошла ошибка: ${err}`);\r\n        })\r\n    }\r\n  }\r\n\r\n  function register(email, password) {\r\n    Auth.register(email, password)\r\n      .then((res) => {\r\n        if (!res.ok) { // если статус ответа false\r\n          setIsEnter(true); //открываем всплывающее окошко\r\n          setErrorReg(true); //меняем стейт, что есть ошибка\r\n        } else {\r\n          setIsEnter(true); //если статус true, то все равно всплавает окошко\r\n          setErrorReg(false); // но наличие ошибки false\r\n          history.push('/signin');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsEnter(true); //в случае иных ошибок появится окошко\r\n        setErrorReg(true);\r\n        console.log(`Упс, произошла ошибка: ${err}`);\r\n      })\r\n  }\r\n\r\n  function login(email, password) {\r\n    Auth.login(email, password)\r\n      .then((data) => {\r\n        if (data.token) {\r\n          setLoggedIn(true); // если есть в ответе есть токен, то меняем стейт чтоб зайти к карточкам\r\n        } else {\r\n          setIsEnter(true); //если ответ с ошибкой, то см. выше при регистрации\r\n          setErrorReg(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Упс, произошла ошибка: ${err}`);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Header logo={logo} loggedIn={loggedIn} user={userData} close={closeLogin} changeAuth={toggleAuth} isToggle={auth} />\r\n        <Switch>\r\n          <ProtectedRoute\r\n            exact path=\"/\"\r\n            loggedIn={loggedIn}\r\n            component={Main}\r\n            onEditProfile={handleEditProfileClick} //передает ф-цию по клике на редактирование профиля\r\n            onAddPlace={handleAddPlaceClick} // передает ф-цию по клике на кнопку добавления нового места\r\n            onEditAvatar={handleEditAvatarClick} //ф-ция по клику на смену аватара\r\n            onCardClick={handleCardClick} //ф-ция по клике на картинку\r\n            onTrashClick={handleVerificationClick}\r\n            cards={cards}\r\n            onCardLike={handleCardLike}\r\n          />\r\n          <Route path=\"/signup\">\r\n            <Register changeAuth={toggleAuth} onSignUp={register} isError={errorReg} />\r\n          </Route>\r\n          <Route path=\"/signin\">\r\n            <Login changeAuth={toggleAuth} onSignIn={login} />\r\n          </Route>\r\n          <Route>\r\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signup\" />}\r\n          </Route>\r\n        </Switch>\r\n\r\n        <InfoTooltip isEnter={errorReg} onClose={closeAllPopups} isOpen={isEnter} />\r\n\r\n        <EditProfilePopup\r\n          overlay={overlayClick}\r\n          isText={text}\r\n          onChangeText={changeText}\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n\r\n        <AddPlacePopup\r\n          overlay={overlayClick}\r\n          isText={text}\r\n          onChangeText={changeText}\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlace}\r\n        />\r\n\r\n        <EditAvatarPopup\r\n          overlay={overlayClick}\r\n          isText={text}\r\n          onChangeText={changeText}\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n\r\n        <EditVerificationPopup\r\n          overlay={overlayClick}\r\n          isText={text}\r\n          onChangeText={changeText}\r\n          cardId={isEditVerificationPopupOpen.cardId}\r\n          isOpen={isEditVerificationPopupOpen.state}\r\n          onClose={closeAllPopups}\r\n          onCardDelete={handleCardDelete}\r\n        />\r\n\r\n        <ImagePopup\r\n          overlay={overlayClick}\r\n          card={showImage}\r\n          isOpen={selectedCard}\r\n          onClose={closeAllPopups}\r\n        />\r\n        <Footer />\r\n      </CurrentUserContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { baseUrlAuth } from '../utils/utils';\n\nexport const register = (email, password) => {\n  return fetch(`${baseUrlAuth}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"email\": email,\n      \"password\": password,\n    })\n  })\n    .then((res) => {\n      try {\n        if (res.status === 200) {\n          return res.json();\n        }\n      }\n      catch (err) {\n        return err;\n      }\n      return res;\n    })\n    .then((res) => {\n      return res;\n    });\n}\n\nexport const login = (email, password) => {\n  return fetch(`${baseUrlAuth}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"email\": email,\n      \"password\": password,\n    })\n  })\n    .then((res) => {\n      try {\n        if (res.status === 200) {\n          return res.json();\n        }\n        // if (res.status === 400) {\n        //   return console.log('не передано одно из полей')\n        // }\n        // if (res.status === 401) {\n        //   return console.log('пользователь с email не найден')\n        // }\n      }\n      catch (err) {\n        return err;\n      };\n      return res;\n    })\n    .then((data) => {\n      localStorage.setItem('jwt', data.token);\n      return data;\n    });\n}\n\nexport const getContent = (token) => {\n  return fetch(`${baseUrlAuth}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${token}`\n    },\n  })\n    .then((res) => {\n      try {\n        if (res.status === 200) {\n          return res.json();\n        }\n        if (res.status === 401) {\n          return console.log('Токен не передан или передан не в том формате')\n        }\n      }\n      catch (err) {\n        return err;\n      };\n      return res;\n    })\n    .then((data) => {\n      return data;\n    });\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}